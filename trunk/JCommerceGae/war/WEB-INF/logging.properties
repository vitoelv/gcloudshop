# A default java.util.logging configuration.
# (All App Engine logging is through java.util.logging by default).
#
# To use this configuration, copy it into your application's WEB-INF
# folder and add the following to your appengine-web.xml:
# 
# <system-properties>
#   <property name="java.util.logging.config.file" value="WEB-INF/logging.properties"/>
# </system-properties>
#

# Set the default logging level for all loggers to WARNING

.level = WARNING

# this is used when deploying to production, and when doing generic local testing.  
com.jcommerce.level = WARNING
# this is used when debugging locally, which includes the msg printed with Logger.info
# com.jcommerce.level = INFO
# this is used when debugging locally, which includes the msg printed with logger.entering, logger.throwing, etc.
# com.jcommerce.level = FINER

# to filter out the annoying xwork2 msgs complaining about not finding properties, (even don't desire that in local debugging!)
com.opensymphony.xwork2.level = SEVERE
# this does not work, seems the logger created inherited the log level from namespace: com.opensymphony.xwork2.level
# com.opensymphony.xwork2.util.logging.commons.level = SEVERE 

# these are just local testing of level settings
com.jcommerce.core.util.JDOQLHelper.level = INFO
#com.jcommerce.web.filter.UnderConstructionFilter.level = WARNING

# Set the default logging level for ORM, specifically, to WARNING
DataNucleus.JDO.level=WARNING
DataNucleus.Persistence.level=WARNING
DataNucleus.Cache.level=WARNING
DataNucleus.MetaData.level=WARNING
DataNucleus.General.level=WARNING
DataNucleus.Utility.level=WARNING
DataNucleus.Transaction.level=WARNING
DataNucleus.Datastore.level=WARNING
DataNucleus.ClassLoading.level=WARNING
DataNucleus.Plugin.level=WARNING
DataNucleus.ValueGeneration.level=WARNING
DataNucleus.Enhancer.level=WARNING
DataNucleus.SchemaTool.level=WARNING
